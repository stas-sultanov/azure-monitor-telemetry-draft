# The workflow to release the library.

name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: Version in format X.Y.Z
        required: true
        type: string
      versionPreRelease:
        default: 'rc'
        description: Pre-release
        required: true
        type: string
      packagePrefix:
        default: 'Stas'
        description: Package prefix
        required: true
        type: string
      pushToGitHub:
        default: false
        description: Push to GitHub.com
        required: true
        type: boolean
      pushToNuGet:
        default: false
        description: Push to NuGet.org
        required: true
        type: boolean

run-name: ${{ format('Release {0}{1}{2}', inputs.version, inputs.versionPreRelease != '' && '-' || '', inputs.versionPreRelease) }}

jobs:
  run:
    name: Run

    permissions:
      # Required by Attestation action to persist the attestation
      attestations: write
      # Required to checkout the repo
      contents: read
      # Required by Attestation action to mint the OIDC token necessary to request a Sigstore signing certificate
      id-token: write

    # one of target frameworks is net462
    runs-on: windows-latest

    env:
      # Assembly Sign Certificate
      ASSEMBLY_SIGN_CERTIFICATE_FILE_NAME: 'assembly.snk'
      # Configuration type to build.
      BUILD_CONFIGURATION_NAME: Release
      # Flag to indicate if the version is pre-release.
      IS_PRE_RELEASE: ${{ inputs.versionPreRelease != '' }}
      # Path to the project file relative to the root of the project.
      MAIN_PROJECT_FILE_PATH: .\src\Azure.Monitor.Telemetry.csproj
      # Package identifier
      PACKAGE_ID: ${{ inputs.packagePrefix}}.Azure.Monitor.Telemetry
      # Package output directory path
      PACKAGE_OUTPUT_DIRECTORY_PATH: .\out
      # Package Version
      PACKAGE_VERSION: ${{ format('{0}{1}{2}', inputs.version, inputs.versionPreRelease != '' && '-' || '', inputs.versionPreRelease) }}
      # Repo url
      REPO_URL: ${{ format('{0}/{1}', github.server_url, github.repository) }}
      # Verbosity level
      VERBOSITY: quiet

    steps:
    - name: Checkout Sources
      uses: actions/checkout@v4

    - name: Get Sign Certificate
      run: |
        echo -n $ASSEMBLY_SIGN_CERTIFICATE_SNK_BASE64 | base64 -d >> ./src/${{ env.ASSEMBLY_SIGN_CERTIFICATE_FILE_NAME }}
      shell: bash
      env:
        ASSEMBLY_SIGN_CERTIFICATE_SNK_BASE64: ${{ secrets.ASSEMBLY_SIGN_CERTIFICATE_SNK_BASE64 }}

    - name: Pack Project
      run: >-
        dotnet pack ${{ env.MAIN_PROJECT_FILE_PATH }}
        --configuration ${{ env.BUILD_CONFIGURATION_NAME }}
        --output ${{ env.PACKAGE_OUTPUT_DIRECTORY_PATH }}
        --verbosity ${{ env.VERBOSITY }}
        -p:AssemblyOriginatorKeyFile=${{ env.ASSEMBLY_SIGN_CERTIFICATE_FILE_NAME }}
        -p:AssemblyVersion=${{ inputs.version }}
        -p:PackageId=${{ env.PACKAGE_ID }}
        -p:PackageProjectUrl=${{ env.REPO_URL }}
        -p:PackageVersion=${{ env.PACKAGE_VERSION }}
        -p:RepositoryBranch=${{ github.ref_name }}
        -p:RepositoryCommit=${{ github.sha }}
        -p:RepositoryUrl=${{ env.REPO_URL }}

    - name: Attest Package Provenance
      if: ${{ !env.IS_PRE_RELEASE }}
      uses: actions/attest-build-provenance@v2
      with:
        subject-path: ${{ env.PACKAGE_OUTPUT_DIRECTORY_PATH }}\*.*pkg

    - name: Publish Package to GitHub
      if: ${{ inputs.pushToGitHub }}
      run: >-
        dotnet nuget push ${{ env.PACKAGE_OUTPUT_DIRECTORY_PATH }}\*.nupkg
        --api-key ${GITHUB_TOKEN}
        --source https://nuget.pkg.github.com/stas-sultanov/index.json
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish Package to NuGet
      if: ${{ inputs.pushToNuGet }}
      run: >-
        dotnet nuget push ${{ env.PACKAGE_OUTPUT_DIRECTORY_PATH }}\*.nupkg
        --api-key ${{ secrets.NUGET_API_KEY }}
        --source ${{ vars.NUGET_API_URL }}

    - name: Upload Package
      uses: actions/upload-artifact@v4
      with:
        name: packages
        path: ${{ env.PACKAGE_OUTPUT_DIRECTORY_PATH }}
