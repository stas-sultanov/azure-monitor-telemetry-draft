name: Build and Test

on:
  workflow_dispatch:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "main" ]

env:
  # Configuration type to build.
  BUILD_CONFIGURATION: Release
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE: ./Azure.Monitor.Telemetry.sln
  # Path to the test results directory relative to the root of the project.
  TESTS_RESULTS_DIRECTORY: ./testsResults

permissions:
  checks: write
  pull-requests: write

jobs:
  Run:
    runs-on: windows-latest

    steps:
    - name: Checkout Sources
      uses: actions/checkout@v4

    - name: Restore NuGet Packages
      run: >-
        dotnet restore ${{ env.SOLUTION_FILE }}

    - name: Build Solution
      run: >-
        dotnet build ${{ env.SOLUTION_FILE }}
        --configuration ${{ env.BUILD_CONFIGURATION }}
        --no-restore

    - name: Run Tests
      id: UnitTests
      run: >-
        dotnet test ${{ env.SOLUTION_FILE }}
        --collect:"Code Coverage"
        --configuration ${{ env.BUILD_CONFIGURATION }}
        --filter TestCategory=UnitTests
        --framework net9.0
        --logger:"console;verbosity=detailed"
        --logger:"trx;logfileprefix=testResults_"
        --no-build
        --results-directory ${{ env.TESTS_RESULTS_DIRECTORY }}
        --verbosity normal

    - name: Publish Tests Results
      uses: EnricoMi/publish-unit-test-result-action/windows@v2
      if: always()
      with:
        files: |
          ${{ env.TESTS_RESULTS_DIRECTORY }}\**\*.trx

    - name: Upload Code Coverage Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: code-coverage-report
        path: ${{ env.TESTS_RESULTS_DIRECTORY }}

    - name: Create code coverage report
      if: always()
      run: |
        dotnet tool install -g dotnet-reportgenerator-globaltool
        reportgenerator -reports:${{ env.TESTS_RESULTS_DIRECTORY }}/**/*.coverage -targetdir:CodeCoverage -reporttypes:'MarkdownSummaryGithub,Cobertura'

    - name: Write to Job Summary
      if: always()
      run: cat CodeCoverage/SummaryGithub.md >> $GITHUB_STEP_SUMMARY

